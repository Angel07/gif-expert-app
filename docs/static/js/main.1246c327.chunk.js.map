{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","x","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAST,EAAaU,SAZvB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCJlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACJ,mCACTN,EAFa,iDAEmCO,UAAUF,GAF7C,6BACJ,oCADI,SAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHhB,GAAIgB,EAAEhB,GACNC,MAAOe,EAAEf,MACTC,IAAG,UAAEc,EAAEC,cAAJ,aAAE,EAAUC,iBAAiBhB,QATrB,kBAYZY,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAYtC,OANAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAC,GACnBH,EAAU,CAACT,KAAMY,EAAML,SAAS,SAErC,CAACb,IAEGc,EDN2BK,CAAanB,GAAjCU,EALqB,EAK3BJ,KAAcO,EALa,EAKbA,QAEtB,OACI,oCACI,wBAAIjB,UAAU,qCAAd,IAAoDI,EAApD,KACEa,GAAW,uBAAGjB,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEPc,EAAOF,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,eAAaW,IAAKX,EAAEhB,IAAQgB,UEbrDY,EAAe,WAAM,MAEM1C,mBAAS,CAAC,QAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAO9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BACA,4BAES4C,EAAWd,KAAI,SAACC,EAAGc,GAAJ,OAAU,kBAAC,EAAD,CAASH,IAAKX,EAAGT,SAAYS,UCb1Ee,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1246c327.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type='text' value= { inputValue } onChange={handleInputChange} />\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","export const getGifs = async(category) => {\n    const apiKey = 'n0fgonuCSqIWVwViU3qx8qzq8gbM1sad';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = data.map(x => {\n        return {\n            id: x.id,\n            title: x.title,\n            url: x.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","import React from 'react'\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({category}) => {\n\n    // const [images, setImages] = useState([]);\n    // useEffect(() => { getGifs(category).then(setImages) }, [category]);\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'> {category} </h3>\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\n            <div className='card-grid'>\n                {\n                    images.map((x) => <GifGridItem key={x.id} {...x}/> )\n                }\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => { \n        getGifs(category).then(imgs => {\n            setState ({data: imgs, loading: false});\n        });\n    }, [category]);\n    \n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    // const categories = ['Uno', 'Dos', 'Tres'];\n    const [categories, setCategories] = useState(['Uno']);\n    /* const handleAdd = () => {\n        // setCategories([...categories, 'Nueva']); // Operador spread\n        setCategories(cats => [...cats, 'Nueva']);\n    } */\n    return (\n        <>\n           <h1>GifExpertApp</h1>\n           <AddCategory setCategories= { setCategories }/>\n           <hr/>\n           <ol>\n                {\n                    categories.map((x, i) => <GifGrid key={x} category = {x}/> )\n                }\n           </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}